package flat/datastruct/list

[AutoFinal]
class ArrayIterator<E> implements Iterator<E> {
  visible var Int position

  visible Bool hasNext => array.count > position
  visible Bool hasPrevious => position > 1

  visible E stepNext {
    get {
      if (hasNext) {
        return array.get(position++)
      }

      throw NoSuchElementException()
    }

    no set
  }

  visible E current => position > 0 ? array.get(position - 1) : null
  visible E previous => hasPrevious ? array.get(position - 2) : null
  visible E next => hasNext ? array.get(position) : null
  visible E[] allNext => array.skip(position)
  visible E[] allPrevious => array.take(position)

  public construct(private E[] array) {
    reset()
  }

  public reset() => this {
    position = 0
  }
}